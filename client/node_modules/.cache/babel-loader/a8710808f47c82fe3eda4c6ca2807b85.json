{"ast":null,"code":"var _jsxFileName = \"/home/hagag/work/js traning/project/twitch/client/src/componets/streams/StreamList.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { fetchStreams } from '../../actions';\n\nclass StreamList extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.renderList = () => {};\n  }\n\n  componentDidMount() {\n    this.props.fetchStreams();\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15\n      },\n      __self: this\n    }, \"StreamList\");\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    streams: Object.values(state.streams)\n  };\n};\n\nexport default connect(mapStateToProps, {\n  fetchStreams\n})(StreamList);","map":{"version":3,"sources":["/home/hagag/work/js traning/project/twitch/client/src/componets/streams/StreamList.js"],"names":["React","connect","fetchStreams","StreamList","Component","renderList","componentDidMount","props","render","mapStateToProps","state","streams","Object","values"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,YAAT,QAA6B,eAA7B;;AAGA,MAAMC,UAAN,SAAyBH,KAAK,CAACI,SAA/B,CAAyC;AAAA;AAAA;;AAAA,SAKrCC,UALqC,GAKxB,MAAM,CAElB,CAPoC;AAAA;;AACrCC,EAAAA,iBAAiB,GAAG;AAChB,SAAKC,KAAL,CAAWL,YAAX;AACH;;AAKDM,EAAAA,MAAM,GAAG;AACL,WAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAR;AAGH;;AAZoC;;AAczC,MAAMC,eAAe,GAAIC,KAAD,IAAW;AAC/B,SAAO;AAAEC,IAAAA,OAAO,EAAEC,MAAM,CAACC,MAAP,CAAcH,KAAK,CAACC,OAApB;AAAX,GAAP;AACH,CAFD;;AAIA,eAAeV,OAAO,CAACQ,eAAD,EAAkB;AAAEP,EAAAA;AAAF,CAAlB,CAAP,CAA2CC,UAA3C,CAAf","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport { fetchStreams } from '../../actions';\n\n\nclass StreamList extends React.Component {\n    componentDidMount() {\n        this.props.fetchStreams();\n    }\n\n    renderList = () => {\n\n    }\n    render() {\n        return (<div>\n            StreamList\n    </div>);\n    }\n}\nconst mapStateToProps = (state) => {\n    return { streams: Object.values(state.streams) }\n}\n\nexport default connect(mapStateToProps, { fetchStreams })(StreamList);"]},"metadata":{},"sourceType":"module"}