{"ast":null,"code":"/*\n * Copyright (C) 2016 Bilibili. All Rights Reserved.\n *\n * @author zheng qian <xqq@xqq.im>\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport EventEmitter from 'events';\n\nclass Log {\n  static e(tag, msg) {\n    if (!tag || Log.FORCE_GLOBAL_TAG) tag = Log.GLOBAL_TAG;\n    let str = \"[\".concat(tag, \"] > \").concat(msg);\n\n    if (Log.ENABLE_CALLBACK) {\n      Log.emitter.emit('log', 'error', str);\n    }\n\n    if (!Log.ENABLE_ERROR) {\n      return;\n    }\n\n    if (console.error) {\n      console.error(str);\n    } else if (console.warn) {\n      console.warn(str);\n    } else {\n      console.log(str);\n    }\n  }\n\n  static i(tag, msg) {\n    if (!tag || Log.FORCE_GLOBAL_TAG) tag = Log.GLOBAL_TAG;\n    let str = \"[\".concat(tag, \"] > \").concat(msg);\n\n    if (Log.ENABLE_CALLBACK) {\n      Log.emitter.emit('log', 'info', str);\n    }\n\n    if (!Log.ENABLE_INFO) {\n      return;\n    }\n\n    if (console.info) {\n      console.info(str);\n    } else {\n      console.log(str);\n    }\n  }\n\n  static w(tag, msg) {\n    if (!tag || Log.FORCE_GLOBAL_TAG) tag = Log.GLOBAL_TAG;\n    let str = \"[\".concat(tag, \"] > \").concat(msg);\n\n    if (Log.ENABLE_CALLBACK) {\n      Log.emitter.emit('log', 'warn', str);\n    }\n\n    if (!Log.ENABLE_WARN) {\n      return;\n    }\n\n    if (console.warn) {\n      console.warn(str);\n    } else {\n      console.log(str);\n    }\n  }\n\n  static d(tag, msg) {\n    if (!tag || Log.FORCE_GLOBAL_TAG) tag = Log.GLOBAL_TAG;\n    let str = \"[\".concat(tag, \"] > \").concat(msg);\n\n    if (Log.ENABLE_CALLBACK) {\n      Log.emitter.emit('log', 'debug', str);\n    }\n\n    if (!Log.ENABLE_DEBUG) {\n      return;\n    }\n\n    if (console.debug) {\n      console.debug(str);\n    } else {\n      console.log(str);\n    }\n  }\n\n  static v(tag, msg) {\n    if (!tag || Log.FORCE_GLOBAL_TAG) tag = Log.GLOBAL_TAG;\n    let str = \"[\".concat(tag, \"] > \").concat(msg);\n\n    if (Log.ENABLE_CALLBACK) {\n      Log.emitter.emit('log', 'verbose', str);\n    }\n\n    if (!Log.ENABLE_VERBOSE) {\n      return;\n    }\n\n    console.log(str);\n  }\n\n}\n\nLog.GLOBAL_TAG = 'flv.js';\nLog.FORCE_GLOBAL_TAG = false;\nLog.ENABLE_ERROR = true;\nLog.ENABLE_INFO = true;\nLog.ENABLE_WARN = true;\nLog.ENABLE_DEBUG = true;\nLog.ENABLE_VERBOSE = true;\nLog.ENABLE_CALLBACK = false;\nLog.emitter = new EventEmitter();\nexport default Log;","map":null,"metadata":{},"sourceType":"module"}