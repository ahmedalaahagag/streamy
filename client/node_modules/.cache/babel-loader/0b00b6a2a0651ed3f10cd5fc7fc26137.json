{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/objectWithoutPropertiesLoose\";\n\nvar createFieldArrayProps = function createFieldArrayProps(_ref, name, form, sectionPrefix, getValue, _ref2) {\n  var getIn = _ref.getIn;\n\n  var arrayInsert = _ref2.arrayInsert,\n      arrayMove = _ref2.arrayMove,\n      arrayPop = _ref2.arrayPop,\n      arrayPush = _ref2.arrayPush,\n      arrayRemove = _ref2.arrayRemove,\n      arrayRemoveAll = _ref2.arrayRemoveAll,\n      arrayShift = _ref2.arrayShift,\n      arraySplice = _ref2.arraySplice,\n      arraySwap = _ref2.arraySwap,\n      arrayUnshift = _ref2.arrayUnshift,\n      asyncError = _ref2.asyncError,\n      dirty = _ref2.dirty,\n      length = _ref2.length,\n      pristine = _ref2.pristine,\n      submitError = _ref2.submitError,\n      state = _ref2.state,\n      submitFailed = _ref2.submitFailed,\n      submitting = _ref2.submitting,\n      syncError = _ref2.syncError,\n      syncWarning = _ref2.syncWarning,\n      value = _ref2.value,\n      props = _ref2.props,\n      rest = _objectWithoutPropertiesLoose(_ref2, [\"arrayInsert\", \"arrayMove\", \"arrayPop\", \"arrayPush\", \"arrayRemove\", \"arrayRemoveAll\", \"arrayShift\", \"arraySplice\", \"arraySwap\", \"arrayUnshift\", \"asyncError\", \"dirty\", \"length\", \"pristine\", \"submitError\", \"state\", \"submitFailed\", \"submitting\", \"syncError\", \"syncWarning\", \"value\", \"props\"]);\n\n  var error = syncError || asyncError || submitError;\n  var warning = syncWarning;\n  var fieldName = sectionPrefix ? name.replace(sectionPrefix + \".\", '') : name;\n\n  var finalProps = _extends({\n    fields: {\n      _isFieldArray: true,\n      forEach: function forEach(callback) {\n        return (value || []).forEach(function (item, index) {\n          return callback(fieldName + \"[\" + index + \"]\", index, finalProps.fields);\n        });\n      },\n      get: getValue,\n      getAll: function getAll() {\n        return value;\n      },\n      insert: arrayInsert,\n      length: length,\n      map: function map(callback) {\n        return (value || []).map(function (item, index) {\n          return callback(fieldName + \"[\" + index + \"]\", index, finalProps.fields);\n        });\n      },\n      move: arrayMove,\n      name: name,\n      pop: function pop() {\n        arrayPop();\n        return getIn(value, String(length - 1));\n      },\n      push: arrayPush,\n      reduce: function reduce(callback, initial) {\n        return (value || []).reduce(function (accumulator, item, index) {\n          return callback(accumulator, fieldName + \"[\" + index + \"]\", index, finalProps.fields);\n        }, initial);\n      },\n      remove: arrayRemove,\n      removeAll: arrayRemoveAll,\n      shift: function shift() {\n        arrayShift();\n        return getIn(value, '0');\n      },\n      splice: arraySplice,\n      swap: arraySwap,\n      unshift: arrayUnshift\n    },\n    meta: {\n      dirty: dirty,\n      error: error,\n      form: form,\n      warning: warning,\n      invalid: !!error,\n      pristine: pristine,\n      submitting: submitting,\n      submitFailed: submitFailed,\n      valid: !error\n    }\n  }, props, rest);\n\n  return finalProps;\n};\n\nexport default createFieldArrayProps;","map":null,"metadata":{},"sourceType":"module"}