{"ast":null,"code":"/*\n * Copyright (C) 2016 Bilibili. All Rights Reserved.\n *\n * @author zheng qian <xqq@xqq.im>\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nclass RangeSeekHandler {\n  constructor(zeroStart) {\n    this._zeroStart = zeroStart || false;\n  }\n\n  getConfig(url, range) {\n    let headers = {};\n\n    if (range.from !== 0 || range.to !== -1) {\n      let param;\n\n      if (range.to !== -1) {\n        param = \"bytes=\".concat(range.from.toString(), \"-\").concat(range.to.toString());\n      } else {\n        param = \"bytes=\".concat(range.from.toString(), \"-\");\n      }\n\n      headers['Range'] = param;\n    } else if (this._zeroStart) {\n      headers['Range'] = 'bytes=0-';\n    }\n\n    return {\n      url: url,\n      headers: headers\n    };\n  }\n\n  removeURLParameters(seekedURL) {\n    return seekedURL;\n  }\n\n}\n\nexport default RangeSeekHandler;","map":null,"metadata":{},"sourceType":"module"}