{"ast":null,"code":"var _jsxFileName = \"/home/hagag/work/js traning/project/twitch/client/src/componets/streams/StreamEdit.js\";\nimport React from 'react';\nimport _ from 'lodash';\nimport { connect } from 'react-redux';\nimport { fetchStream, editStream } from '../../actions';\nimport StreamForm from './StreamForm';\n\nclass StreamEdit extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.onSubmit = formValues => {\n      this.props.editStream(this.props.stream.id, formValues);\n    };\n  }\n\n  componentDidMount() {\n    this.props.fetchStream(this.props.match.params.id);\n  }\n\n  render() {\n    if (!this.props.stream) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 18\n        },\n        __self: this\n      }, \"Loading...\");\n    }\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    }, \"Edit a Stream\"), React.createElement(StreamForm, {\n      initialValues: _.pick(this.props.stream, 'title', 'description'),\n      onSubmit: this.onSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    }));\n  }\n\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    stream: state.streams[ownProps.match.params.id]\n  };\n};\n\nexport default connect(mapStateToProps, {\n  fetchStream\n})(StreamEdit);","map":{"version":3,"sources":["/home/hagag/work/js traning/project/twitch/client/src/componets/streams/StreamEdit.js"],"names":["React","_","connect","fetchStream","editStream","StreamForm","StreamEdit","Component","onSubmit","formValues","props","stream","id","componentDidMount","match","params","render","pick","mapStateToProps","state","ownProps","streams"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,CAAP,MAAc,QAAd;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,WAAT,EAAsBC,UAAtB,QAAwC,eAAxC;AACA,OAAOC,UAAP,MAAuB,cAAvB;;AAEA,MAAMC,UAAN,SAAyBN,KAAK,CAACO,SAA/B,CAAyC;AAAA;AAAA;;AAAA,SAKrCC,QALqC,GAK1BC,UAAU,IAAI;AACrB,WAAKC,KAAL,CAAWN,UAAX,CAAsB,KAAKM,KAAL,CAAWC,MAAX,CAAkBC,EAAxC,EAA4CH,UAA5C;AACH,KAPoC;AAAA;;AACrCI,EAAAA,iBAAiB,GAAG;AAChB,SAAKH,KAAL,CAAWP,WAAX,CAAuB,KAAKO,KAAL,CAAWI,KAAX,CAAiBC,MAAjB,CAAwBH,EAA/C;AACH;;AAMDI,EAAAA,MAAM,GAAG;AACL,QAAI,CAAC,KAAKN,KAAL,CAAWC,MAAhB,EAAwB;AACpB,aAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAP;AACH;;AACD,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADJ,EAEI,oBAAC,UAAD;AAAY,MAAA,aAAa,EAAEV,CAAC,CAACgB,IAAF,CAAO,KAAKP,KAAL,CAAWC,MAAlB,EAA0B,OAA1B,EAAmC,aAAnC,CAA3B;AACI,MAAA,QAAQ,EAAE,KAAKH,QADnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CADJ;AAOH;;AApBoC;;AAuBzC,MAAMU,eAAe,GAAG,CAACC,KAAD,EAAQC,QAAR,KAAqB;AACzC,SAAO;AAAET,IAAAA,MAAM,EAAEQ,KAAK,CAACE,OAAN,CAAcD,QAAQ,CAACN,KAAT,CAAeC,MAAf,CAAsBH,EAApC;AAAV,GAAP;AACH,CAFD;;AAIA,eAAeV,OAAO,CAACgB,eAAD,EAAkB;AAAEf,EAAAA;AAAF,CAAlB,CAAP,CAA0CG,UAA1C,CAAf","sourcesContent":["import React from 'react';\nimport _ from 'lodash';\nimport { connect } from 'react-redux';\nimport { fetchStream, editStream } from '../../actions';\nimport StreamForm from './StreamForm';\n\nclass StreamEdit extends React.Component {\n    componentDidMount() {\n        this.props.fetchStream(this.props.match.params.id);\n    }\n\n    onSubmit = formValues => {\n        this.props.editStream(this.props.stream.id, formValues);\n    }\n\n    render() {\n        if (!this.props.stream) {\n            return <div>Loading...</div>\n        }\n        return (\n            <div>\n                <h3>Edit a Stream</h3>\n                <StreamForm initialValues={_.pick(this.props.stream, 'title', 'description')}\n                    onSubmit={this.onSubmit} />\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state, ownProps) => {\n    return { stream: state.streams[ownProps.match.params.id] }\n}\n\nexport default connect(mapStateToProps, { fetchStream })(StreamEdit); "]},"metadata":{},"sourceType":"module"}