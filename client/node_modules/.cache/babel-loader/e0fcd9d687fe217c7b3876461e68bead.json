{"ast":null,"code":"/*\n * Copyright (C) 2016 Bilibili. All Rights Reserved.\n *\n * @author zheng qian <xqq@xqq.im>\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nclass ParamSeekHandler {\n  constructor(paramStart, paramEnd) {\n    this._startName = paramStart;\n    this._endName = paramEnd;\n  }\n\n  getConfig(baseUrl, range) {\n    let url = baseUrl;\n\n    if (range.from !== 0 || range.to !== -1) {\n      let needAnd = true;\n\n      if (url.indexOf('?') === -1) {\n        url += '?';\n        needAnd = false;\n      }\n\n      if (needAnd) {\n        url += '&';\n      }\n\n      url += \"\".concat(this._startName, \"=\").concat(range.from.toString());\n\n      if (range.to !== -1) {\n        url += \"&\".concat(this._endName, \"=\").concat(range.to.toString());\n      }\n    }\n\n    return {\n      url: url,\n      headers: {}\n    };\n  }\n\n  removeURLParameters(seekedURL) {\n    let baseURL = seekedURL.split('?')[0];\n    let params = undefined;\n    let queryIndex = seekedURL.indexOf('?');\n\n    if (queryIndex !== -1) {\n      params = seekedURL.substring(queryIndex + 1);\n    }\n\n    let resultParams = '';\n\n    if (params != undefined && params.length > 0) {\n      let pairs = params.split('&');\n\n      for (let i = 0; i < pairs.length; i++) {\n        let pair = pairs[i].split('=');\n        let requireAnd = i > 0;\n\n        if (pair[0] !== this._startName && pair[0] !== this._endName) {\n          if (requireAnd) {\n            resultParams += '&';\n          }\n\n          resultParams += pairs[i];\n        }\n      }\n    }\n\n    return resultParams.length === 0 ? baseURL : baseURL + '?' + resultParams;\n  }\n\n}\n\nexport default ParamSeekHandler;","map":null,"metadata":{},"sourceType":"module"}