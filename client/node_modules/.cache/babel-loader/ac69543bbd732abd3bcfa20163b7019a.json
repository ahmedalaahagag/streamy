{"ast":null,"code":"var _jsxFileName = \"/home/hagag/work/js traning/project/twitch/client/src/componets/streams/StreamDelete.js\";\nimport React from 'react';\nimport Modal from '../Modal';\nimport history from '../../history';\nimport { connect } from 'react-redux';\nimport { fetchStream } from '../../actions';\n\nclass StreamDelete extends React.Component {\n  componentDidMount() {\n    this.props.fetchStream(this.props.match.params.id);\n  }\n\n  renderActions() {\n    return React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      className: \"ui button negative\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15\n      },\n      __self: this\n    }, \"Delete\"), React.createElement(\"button\", {\n      className: \"ui button\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16\n      },\n      __self: this\n    }, \"Cancel\"));\n  }\n\n  renderContent() {\n    if (!this.props.stream) {\n      return 'Are you sure you want to delete this stream ?';\n    }\n\n    return \"Are you sure you want to delete this stream \".concat(this.props.stream.title);\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, React.createElement(Modal, {\n      title: \"Delete Stream ?\",\n      content: this.renderContent(),\n      actions: this.renderActions(),\n      onDismiss: () => history.push('/'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }));\n  }\n\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    stream: state.streams[ownProps.match.params.id]\n  };\n};\n\nexport default connect(mapStateToProps, {\n  fetchStream\n})(StreamDelete);","map":{"version":3,"sources":["/home/hagag/work/js traning/project/twitch/client/src/componets/streams/StreamDelete.js"],"names":["React","Modal","history","connect","fetchStream","StreamDelete","Component","componentDidMount","props","match","params","id","renderActions","renderContent","stream","title","render","push","mapStateToProps","state","ownProps","streams"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,UAAlB;AACA,OAAOC,OAAP,MAAoB,eAApB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,WAAT,QAA4B,eAA5B;;AAEA,MAAMC,YAAN,SAA2BL,KAAK,CAACM,SAAjC,CAA2C;AACvCC,EAAAA,iBAAiB,GAAG;AAChB,SAAKC,KAAL,CAAWJ,WAAX,CAAuB,KAAKI,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwBC,EAA/C;AACH;;AAEDC,EAAAA,aAAa,GAAG;AACZ,WACI,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAQ,MAAA,SAAS,EAAC,oBAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,EAEI;AAAQ,MAAA,SAAS,EAAC,WAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ,CADJ;AAMH;;AAEDC,EAAAA,aAAa,GAAG;AACZ,QAAI,CAAC,KAAKL,KAAL,CAAWM,MAAhB,EAAwB;AACpB,aAAO,+CAAP;AAEH;;AACD,iEAAsD,KAAKN,KAAL,CAAWM,MAAX,CAAkBC,KAAxE;AACH;;AAEDC,EAAAA,MAAM,GAAG;AAEL,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,KAAD;AACI,MAAA,KAAK,EAAC,iBADV;AAEI,MAAA,OAAO,EAAE,KAAKH,aAAL,EAFb;AAGI,MAAA,OAAO,EAAE,KAAKD,aAAL,EAHb;AAII,MAAA,SAAS,EAAE,MAAMV,OAAO,CAACe,IAAR,CAAa,GAAb,CAJrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CADJ;AAUH;;AAlCsC;;AAqC3C,MAAMC,eAAe,GAAG,CAACC,KAAD,EAAQC,QAAR,KAAqB;AACzC,SAAO;AAAEN,IAAAA,MAAM,EAAEK,KAAK,CAACE,OAAN,CAAcD,QAAQ,CAACX,KAAT,CAAeC,MAAf,CAAsBC,EAApC;AAAV,GAAP;AACH,CAFD;;AAIA,eAAeR,OAAO,CAACe,eAAD,EAAkB;AAAEd,EAAAA;AAAF,CAAlB,CAAP,CAA0CC,YAA1C,CAAf","sourcesContent":["import React from 'react';\nimport Modal from '../Modal';\nimport history from '../../history';\nimport { connect } from 'react-redux';\nimport { fetchStream } from '../../actions'\n\nclass StreamDelete extends React.Component {\n    componentDidMount() {\n        this.props.fetchStream(this.props.match.params.id);\n    }\n\n    renderActions() {\n        return (\n            <React.Fragment>\n                <button className=\"ui button negative\">Delete</button>\n                <button className=\"ui button\">Cancel</button>\n            </React.Fragment>\n        )\n    }\n\n    renderContent() {\n        if (!this.props.stream) {\n            return 'Are you sure you want to delete this stream ?'\n\n        }\n        return `Are you sure you want to delete this stream ${this.props.stream.title}`;\n    }\n\n    render() {\n\n        return (\n            <div>\n                <Modal\n                    title=\"Delete Stream ?\"\n                    content={this.renderContent()}\n                    actions={this.renderActions()}\n                    onDismiss={() => history.push('/')}\n                />\n            </div >\n        );\n    }\n}\n\nconst mapStateToProps = (state, ownProps) => {\n    return { stream: state.streams[ownProps.match.params.id] }\n}\n\nexport default connect(mapStateToProps, { fetchStream })(StreamDelete);"]},"metadata":{},"sourceType":"module"}