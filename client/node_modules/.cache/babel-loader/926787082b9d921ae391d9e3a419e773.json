{"ast":null,"code":"/*\n * Copyright (C) 2016 Bilibili. All Rights Reserved.\n *\n * @author zheng qian <xqq@xqq.im>\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nclass Polyfill {\n  static install() {\n    // ES6 Object.setPrototypeOf\n    Object.setPrototypeOf = Object.setPrototypeOf || function (obj, proto) {\n      obj.__proto__ = proto;\n      return obj;\n    }; // ES6 Object.assign\n\n\n    Object.assign = Object.assign || function (target) {\n      if (target === undefined || target === null) {\n        throw new TypeError('Cannot convert undefined or null to object');\n      }\n\n      let output = Object(target);\n\n      for (let i = 1; i < arguments.length; i++) {\n        let source = arguments[i];\n\n        if (source !== undefined && source !== null) {\n          for (let key in source) {\n            if (source.hasOwnProperty(key)) {\n              output[key] = source[key];\n            }\n          }\n        }\n      }\n\n      return output;\n    }; // ES6 Promise (missing support in IE11)\n\n\n    if (typeof self.Promise !== 'function') {\n      require('es6-promise').polyfill();\n    }\n  }\n\n}\n\nPolyfill.install();\nexport default Polyfill;","map":null,"metadata":{},"sourceType":"module"}