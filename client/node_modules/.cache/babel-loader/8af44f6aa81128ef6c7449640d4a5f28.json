{"ast":null,"code":"var _jsxFileName = \"/home/hagag/work/js traning/project/streams/client/src/componets/GoogleAuth.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { signIn, signOut } from '../actions';\n\nclass GoogleAuth extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.onAuthChange = isSignedIn => {\n      if (isSignedIn) {\n        this.props.signIn();\n      } else {\n        this.props.signOut();\n      }\n    };\n\n    this.onSignInClick = () => {\n      this.auth.signIn();\n    };\n\n    this.onSignOutClick = () => {\n      this.auth.signOut();\n    };\n  }\n\n  componentDidMount() {\n    window.gapi.load('client:auth2', () => {\n      window.gapi.client.init({\n        clientId: '767141226919-1bl4npm92t4r9bkcmutupvphkum0drb1.apps.googleusercontent.com',\n        scope: 'email'\n      }).then(() => {\n        this.auth = window.gapi.auth2.getAuthInstance();\n        this.onAuthChange(this.auth.isSignedIn.get());\n        this.auth.isSignedIn.listen(this.onAuthChange);\n      });\n    });\n  }\n\n  renderAuthButton() {\n    if (this.props.isSignedIn) {\n      return React.createElement(\"button\", {\n        className: \"ui red google button\",\n        onClick: this.onSignOutClick,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"google icon\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }), \"Sign out from google account\");\n    } else {\n      return React.createElement(\"button\", {\n        className: \"ui red google button\",\n        onClick: this.onSignInClick,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"google icon\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }), \"Sign in with google\");\n    }\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, this.renderAuthButton());\n  }\n\n}\n\n;\n\nconst mapStateToProp = state => {\n  return {\n    isSignedIn: state.isSignedIn\n  };\n};\n\nexport default connect(mapStateToProp, {\n  signIn,\n  signOut\n})(GoogleAuth);","map":{"version":3,"sources":["/home/hagag/work/js traning/project/streams/client/src/componets/GoogleAuth.js"],"names":["React","connect","signIn","signOut","GoogleAuth","Component","onAuthChange","isSignedIn","props","onSignInClick","auth","onSignOutClick","componentDidMount","window","gapi","load","client","init","clientId","scope","then","auth2","getAuthInstance","get","listen","renderAuthButton","render","mapStateToProp","state"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,MAAT,EAAiBC,OAAjB,QAAgC,YAAhC;;AAGA,MAAMC,UAAN,SAAyBJ,KAAK,CAACK,SAA/B,CAAyC;AAAA;AAAA;;AAAA,SAerCC,YAfqC,GAerBC,UAAD,IAAgB;AAC3B,UAAIA,UAAJ,EAAgB;AACZ,aAAKC,KAAL,CAAWN,MAAX;AACH,OAFD,MAEO;AACH,aAAKM,KAAL,CAAWL,OAAX;AACH;AACJ,KArBoC;;AAAA,SAuBrCM,aAvBqC,GAuBrB,MAAM;AAClB,WAAKC,IAAL,CAAUR,MAAV;AACH,KAzBoC;;AAAA,SA0BrCS,cA1BqC,GA0BpB,MAAM;AACnB,WAAKD,IAAL,CAAUP,OAAV;AACH,KA5BoC;AAAA;;AAErCS,EAAAA,iBAAiB,GAAG;AAChBC,IAAAA,MAAM,CAACC,IAAP,CAAYC,IAAZ,CAAiB,cAAjB,EAAiC,MAAM;AACnCF,MAAAA,MAAM,CAACC,IAAP,CAAYE,MAAZ,CAAmBC,IAAnB,CAAwB;AACpBC,QAAAA,QAAQ,EAAE,0EADU;AAEpBC,QAAAA,KAAK,EAAE;AAFa,OAAxB,EAGGC,IAHH,CAGQ,MAAM;AACV,aAAKV,IAAL,GAAYG,MAAM,CAACC,IAAP,CAAYO,KAAZ,CAAkBC,eAAlB,EAAZ;AACA,aAAKhB,YAAL,CAAkB,KAAKI,IAAL,CAAUH,UAAV,CAAqBgB,GAArB,EAAlB;AACA,aAAKb,IAAL,CAAUH,UAAV,CAAqBiB,MAArB,CAA4B,KAAKlB,YAAjC;AACH,OAPD;AAQH,KATD;AAUH;;AAiBDmB,EAAAA,gBAAgB,GAAG;AACf,QAAI,KAAKjB,KAAL,CAAWD,UAAf,EAA2B;AACvB,aACI;AAAQ,QAAA,SAAS,EAAC,sBAAlB;AAAyC,QAAA,OAAO,EAAE,KAAKI,cAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAG,QAAA,SAAS,EAAC,aAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,iCADJ;AAMH,KAPD,MAOO;AACH,aACI;AAAQ,QAAA,SAAS,EAAC,sBAAlB;AAAyC,QAAA,OAAO,EAAE,KAAKF,aAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAG,QAAA,SAAS,EAAC,aAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,wBADJ;AAMH;AACJ;;AAEDiB,EAAAA,MAAM,GAAG;AACL,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,KAAKD,gBAAL,EADL,CADJ;AAKH;;AAtDoC;;AAuDxC;;AAED,MAAME,cAAc,GAAIC,KAAD,IAAW;AAC9B,SAAO;AAAErB,IAAAA,UAAU,EAAEqB,KAAK,CAACrB;AAApB,GAAP;AACH,CAFD;;AAIA,eAAeN,OAAO,CAAC0B,cAAD,EAAiB;AAAEzB,EAAAA,MAAF;AAAUC,EAAAA;AAAV,CAAjB,CAAP,CAA6CC,UAA7C,CAAf","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport { signIn, signOut } from '../actions';\n\n\nclass GoogleAuth extends React.Component {\n\n    componentDidMount() {\n        window.gapi.load('client:auth2', () => {\n            window.gapi.client.init({\n                clientId: '767141226919-1bl4npm92t4r9bkcmutupvphkum0drb1.apps.googleusercontent.com',\n                scope: 'email'\n            }).then(() => {\n                this.auth = window.gapi.auth2.getAuthInstance();\n                this.onAuthChange(this.auth.isSignedIn.get());\n                this.auth.isSignedIn.listen(this.onAuthChange);\n            });\n        });\n    }\n\n    onAuthChange = (isSignedIn) => {\n        if (isSignedIn) {\n            this.props.signIn();\n        } else {\n            this.props.signOut();\n        }\n    }\n\n    onSignInClick = () => {\n        this.auth.signIn();\n    }\n    onSignOutClick = () => {\n        this.auth.signOut();\n    }\n\n    renderAuthButton() {\n        if (this.props.isSignedIn) {\n            return (\n                <button className='ui red google button' onClick={this.onSignOutClick}>\n                    <i className=\"google icon\" />\n                    Sign out from google account\n                    </button>\n            );\n        } else {\n            return (\n                <button className='ui red google button' onClick={this.onSignInClick}>\n                    <i className=\"google icon\" />\n                    Sign in with google\n                    </button>\n            );\n        }\n    }\n\n    render() {\n        return (\n            <div>\n                {this.renderAuthButton()}\n            </div>\n        );\n    }\n};\n\nconst mapStateToProp = (state) => {\n    return { isSignedIn: state.isSignedIn };\n};\n\nexport default connect(mapStateToProp, { signIn, signOut })(GoogleAuth);\n"]},"metadata":{},"sourceType":"module"}